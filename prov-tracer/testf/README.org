* Million dollar question: Why is VerboseCallLogger::new called twice?
Run ~bash test.sh~ to run the experiment.

1. ~test.sh~ calls ~cargo build~, which builds ~src/lib.rs~ into ~target/debug/libtestf.so~.
2. ~head $file~ with ~LD_PRELOAD~ set to ~target/debug/libtestf.so~.
3. ~head~ calls ~open~.
4. ~open~ invokes the ~thread_local!~ (see ~src/lib.rs~) lazy initializer.
5. ~thread_local!~ lazy initializer calls ~VerboseCallLogger::new~ (see ~src/lib.rs~).
6. Somehow, that gets called twice.

If I replace ~bash -c~ with ~target/debug/exe~ (a program which fork-&-exec's its arguments), the unexpected second ~VerboseCallLogger::new~ does not appear.
